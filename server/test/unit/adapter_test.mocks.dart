// Mocks generated by Mockito 5.4.6 from annotations
// in pritt_server/test/unit/adapter_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:pritt_server/src/lib/adapter/adapter_base.dart' as _i8;
import 'package:pritt_server/src/lib/crs/crs.dart' as _i3;
import 'package:pritt_server/src/lib/crs/db.dart' as _i2;
import 'package:pritt_server/src/lib/crs/db/schema.dart' as _i6;
import 'package:pritt_server/src/lib/crs/fs.dart' as _i4;
import 'package:pritt_server/src/lib/crs/interfaces.dart' as _i3;
import 'package:pritt_server/src/lib/crs/response.dart' as _i3;
import 'package:pritt_server/src/lib/shared/version.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCRSDatabaseInterface_0 extends _i1.SmartFake
    implements _i2.CRSDatabaseInterface {
  _FakeCRSDatabaseInterface_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCRSResponse_1<T> extends _i1.SmartFake
    implements _i3.CRSResponse<T> {
  _FakeCRSResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCRSRegistryOFSInterface_2 extends _i1.SmartFake
    implements _i4.CRSRegistryOFSInterface {
  _FakeCRSRegistryOFSInterface_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CRSDBController].
///
/// See the documentation for Mockito's code generation for more information.
class MockCRSDBController extends _i1.Mock implements _i3.CRSDBController {
  MockCRSDBController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.CRSDatabaseInterface get db => (super.noSuchMethod(
        Invocation.getter(#db),
        returnValue: _FakeCRSDatabaseInterface_0(
          this,
          Invocation.getter(#db),
        ),
      ) as _i2.CRSDatabaseInterface);

  @override
  _i5.Future<_i3.CRSResponse<_i6.PackageVersions>> getLatestPackage(
    String? packageName, {
    String? language,
    Map<String, dynamic>? env,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLatestPackage,
          [packageName],
          {
            #language: language,
            #env: env,
          },
        ),
        returnValue: _i5.Future<_i3.CRSResponse<_i6.PackageVersions>>.value(
            _FakeCRSResponse_1<_i6.PackageVersions>(
          this,
          Invocation.method(
            #getLatestPackage,
            [packageName],
            {
              #language: language,
              #env: env,
            },
          ),
        )),
      ) as _i5.Future<_i3.CRSResponse<_i6.PackageVersions>>);

  @override
  _i5.Future<_i3.CRSResponse<_i6.PackageVersions>> getPackageWithVersion(
    String? packageName,
    String? version, {
    String? language,
    Map<String, dynamic>? env,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPackageWithVersion,
          [
            packageName,
            version,
          ],
          {
            #language: language,
            #env: env,
          },
        ),
        returnValue: _i5.Future<_i3.CRSResponse<_i6.PackageVersions>>.value(
            _FakeCRSResponse_1<_i6.PackageVersions>(
          this,
          Invocation.method(
            #getPackageWithVersion,
            [
              packageName,
              version,
            ],
            {
              #language: language,
              #env: env,
            },
          ),
        )),
      ) as _i5.Future<_i3.CRSResponse<_i6.PackageVersions>>);

  @override
  _i5.Future<
      _i3.CRSResponse<Map<_i7.Version, _i6.PackageVersions>>> getPackages(
    String? packageName, {
    String? language,
    Map<String, dynamic>? env,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPackages,
          [packageName],
          {
            #language: language,
            #env: env,
          },
        ),
        returnValue: _i5.Future<
                _i3.CRSResponse<Map<_i7.Version, _i6.PackageVersions>>>.value(
            _FakeCRSResponse_1<Map<_i7.Version, _i6.PackageVersions>>(
          this,
          Invocation.method(
            #getPackages,
            [packageName],
            {
              #language: language,
              #env: env,
            },
          ),
        )),
      ) as _i5.Future<_i3.CRSResponse<Map<_i7.Version, _i6.PackageVersions>>>);

  @override
  _i5.Future<_i3.CRSResponse<_i6.Package>> getPackageDetails(
    String? packageName, {
    String? language,
    Map<String, dynamic>? env,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPackageDetails,
          [packageName],
          {
            #language: language,
            #env: env,
          },
        ),
        returnValue: _i5.Future<_i3.CRSResponse<_i6.Package>>.value(
            _FakeCRSResponse_1<_i6.Package>(
          this,
          Invocation.method(
            #getPackageDetails,
            [packageName],
            {
              #language: language,
              #env: env,
            },
          ),
        )),
      ) as _i5.Future<_i3.CRSResponse<_i6.Package>>);
}

/// A class which mocks [CRSArchiveController].
///
/// See the documentation for Mockito's code generation for more information.
class MockCRSArchiveController extends _i1.Mock
    implements _i3.CRSArchiveController {
  MockCRSArchiveController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.CRSRegistryOFSInterface get ofs => (super.noSuchMethod(
        Invocation.getter(#ofs),
        returnValue: _FakeCRSRegistryOFSInterface_2(
          this,
          Invocation.getter(#ofs),
        ),
      ) as _i4.CRSRegistryOFSInterface);

  @override
  _i5.Future<_i3.CRSResponse<_i3.CRSArchive>> getArchive(
    String? packageName,
    String? version, {
    String? language,
    Map<String, dynamic>? env,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getArchive,
          [
            packageName,
            version,
          ],
          {
            #language: language,
            #env: env,
          },
        ),
        returnValue: _i5.Future<_i3.CRSResponse<_i3.CRSArchive>>.value(
            _FakeCRSResponse_1<_i3.CRSArchive>(
          this,
          Invocation.method(
            #getArchive,
            [
              packageName,
              version,
            ],
            {
              #language: language,
              #env: env,
            },
          ),
        )),
      ) as _i5.Future<_i3.CRSResponse<_i3.CRSArchive>>);

  @override
  _i5.Future<_i3.CRSResponse<_i3.CRSArchive>> getArchiveWithVersion(
    String? packageName,
    String? version, {
    String? language,
    Map<String, dynamic>? env,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getArchiveWithVersion,
          [
            packageName,
            version,
          ],
          {
            #language: language,
            #env: env,
          },
        ),
        returnValue: _i5.Future<_i3.CRSResponse<_i3.CRSArchive>>.value(
            _FakeCRSResponse_1<_i3.CRSArchive>(
          this,
          Invocation.method(
            #getArchiveWithVersion,
            [
              packageName,
              version,
            ],
            {
              #language: language,
              #env: env,
            },
          ),
        )),
      ) as _i5.Future<_i3.CRSResponse<_i3.CRSArchive>>);
}

/// A class which mocks [MetaResult].
///
/// See the documentation for Mockito's code generation for more information.
class MockMetaResult extends _i1.Mock implements _i8.MetaResult {
  MockMetaResult() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}
