// Mocks generated by Mockito 5.4.6 from annotations
// in pritt_cli/test/utils/client.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;
import 'package:pritt_cli/src/client.dart' as _i4;
import 'package:pritt_cli/src/client/authentication.dart' as _i6;
import 'package:pritt_cli/src/client/base.dart' as _i8;
import 'package:pritt_common/interface.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAddAdapterResponse_1 extends _i1.SmartFake
    implements _i3.AddAdapterResponse {
  _FakeAddAdapterResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAddUserResponse_2 extends _i1.SmartFake
    implements _i3.AddUserResponse {
  _FakeAddUserResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAuthResponse_3 extends _i1.SmartFake implements _i3.AuthResponse {
  _FakeAuthResponse_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedContent_4 extends _i1.SmartFake
    implements _i3.StreamedContent {
  _FakeStreamedContent_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetAdapterResponse_5 extends _i1.SmartFake
    implements _i3.GetAdapterResponse {
  _FakeGetAdapterResponse_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetAdaptersResponse_6 extends _i1.SmartFake
    implements _i3.GetAdaptersResponse {
  _FakeGetAdaptersResponse_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetAdaptersByLangResponse_7 extends _i1.SmartFake
    implements _i3.GetAdaptersByLangResponse {
  _FakeGetAdaptersByLangResponse_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAuthPollResponse_8 extends _i1.SmartFake
    implements _i3.AuthPollResponse {
  _FakeAuthPollResponse_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetPackageResponse_9 extends _i1.SmartFake
    implements _i3.GetPackageResponse {
  _FakeGetPackageResponse_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetPackageByVersionResponse_10 extends _i1.SmartFake
    implements _i3.GetPackageByVersionResponse {
  _FakeGetPackageByVersionResponse_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetPackagesResponse_11 extends _i1.SmartFake
    implements _i3.GetPackagesResponse {
  _FakeGetPackagesResponse_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetUserResponse_12 extends _i1.SmartFake
    implements _i3.GetUserResponse {
  _FakeGetUserResponse_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetUsersResponse_13 extends _i1.SmartFake
    implements _i3.GetUsersResponse {
  _FakeGetUsersResponse_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePublishPackageResponse_14 extends _i1.SmartFake
    implements _i3.PublishPackageResponse {
  _FakePublishPackageResponse_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePublishPackageByVersionResponse_15 extends _i1.SmartFake
    implements _i3.PublishPackageByVersionResponse {
  _FakePublishPackageByVersionResponse_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUploadAdapterResponse_16 extends _i1.SmartFake
    implements _i3.UploadAdapterResponse {
  _FakeUploadAdapterResponse_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUploadPackageResponse_17 extends _i1.SmartFake
    implements _i3.UploadPackageResponse {
  _FakeUploadPackageResponse_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeYankAdapterResponse_18 extends _i1.SmartFake
    implements _i3.YankAdapterResponse {
  _FakeYankAdapterResponse_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeYankPackageResponse_19 extends _i1.SmartFake
    implements _i3.YankPackageResponse {
  _FakeYankPackageResponse_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeYankPackageByVersionRequest_20 extends _i1.SmartFake
    implements _i3.YankPackageByVersionRequest {
  _FakeYankPackageByVersionRequest_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBaseResponse_21 extends _i1.SmartFake implements _i2.BaseResponse {
  _FakeBaseResponse_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PrittClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockPrittClient extends _i1.Mock implements _i4.PrittClient {
  @override
  String get url => (super.noSuchMethod(
        Invocation.getter(#url),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#url),
        ),
        returnValueForMissingStub: _i5.dummyValue<String>(
          this,
          Invocation.getter(#url),
        ),
      ) as String);

  @override
  _i2.Client get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeClient_0(
          this,
          Invocation.getter(#client),
        ),
        returnValueForMissingStub: _FakeClient_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.Client);

  @override
  Map<String, String> get headers => (super.noSuchMethod(
        Invocation.getter(#headers),
        returnValue: <String, String>{},
        returnValueForMissingStub: <String, String>{},
      ) as Map<String, String>);

  @override
  set authentication(_i6.Authentication? _authentication) => super.noSuchMethod(
        Invocation.setter(
          #authentication,
          _authentication,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set client(_i2.Client? _client) => super.noSuchMethod(
        Invocation.setter(
          #client,
          _client,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.FutureOr<_i3.AddAdapterResponse> addAdapterWithId(
    _i3.AddAdapterRequest? body, {
    required String? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addAdapterWithId,
          [body],
          {#id: id},
        ),
        returnValue:
            _i7.Future<_i3.AddAdapterResponse>.value(_FakeAddAdapterResponse_1(
          this,
          Invocation.method(
            #addAdapterWithId,
            [body],
            {#id: id},
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.AddAdapterResponse>.value(_FakeAddAdapterResponse_1(
          this,
          Invocation.method(
            #addAdapterWithId,
            [body],
            {#id: id},
          ),
        )),
      ) as _i7.FutureOr<_i3.AddAdapterResponse>);

  @override
  _i7.FutureOr<_i3.AddUserResponse> addUserById(
    _i3.AddUserRequest? body, {
    required String? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addUserById,
          [body],
          {#id: id},
        ),
        returnValue:
            _i7.Future<_i3.AddUserResponse>.value(_FakeAddUserResponse_2(
          this,
          Invocation.method(
            #addUserById,
            [body],
            {#id: id},
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.AddUserResponse>.value(_FakeAddUserResponse_2(
          this,
          Invocation.method(
            #addUserById,
            [body],
            {#id: id},
          ),
        )),
      ) as _i7.FutureOr<_i3.AddUserResponse>);

  @override
  _i7.FutureOr<_i3.AuthResponse> createNewAuthStatus() => (super.noSuchMethod(
        Invocation.method(
          #createNewAuthStatus,
          [],
        ),
        returnValue: _i7.Future<_i3.AuthResponse>.value(_FakeAuthResponse_3(
          this,
          Invocation.method(
            #createNewAuthStatus,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.AuthResponse>.value(_FakeAuthResponse_3(
          this,
          Invocation.method(
            #createNewAuthStatus,
            [],
          ),
        )),
      ) as _i7.FutureOr<_i3.AuthResponse>);

  @override
  _i7.FutureOr<_i3.StreamedContent> getAdapterArchiveWithName() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAdapterArchiveWithName,
          [],
        ),
        returnValue:
            _i7.Future<_i3.StreamedContent>.value(_FakeStreamedContent_4(
          this,
          Invocation.method(
            #getAdapterArchiveWithName,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.StreamedContent>.value(_FakeStreamedContent_4(
          this,
          Invocation.method(
            #getAdapterArchiveWithName,
            [],
          ),
        )),
      ) as _i7.FutureOr<_i3.StreamedContent>);

  @override
  _i7.FutureOr<_i3.GetAdapterResponse> getAdapterById({required String? id}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAdapterById,
          [],
          {#id: id},
        ),
        returnValue:
            _i7.Future<_i3.GetAdapterResponse>.value(_FakeGetAdapterResponse_5(
          this,
          Invocation.method(
            #getAdapterById,
            [],
            {#id: id},
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.GetAdapterResponse>.value(_FakeGetAdapterResponse_5(
          this,
          Invocation.method(
            #getAdapterById,
            [],
            {#id: id},
          ),
        )),
      ) as _i7.FutureOr<_i3.GetAdapterResponse>);

  @override
  _i7.FutureOr<_i3.GetAdaptersResponse> getAdapters() => (super.noSuchMethod(
        Invocation.method(
          #getAdapters,
          [],
        ),
        returnValue: _i7.Future<_i3.GetAdaptersResponse>.value(
            _FakeGetAdaptersResponse_6(
          this,
          Invocation.method(
            #getAdapters,
            [],
          ),
        )),
        returnValueForMissingStub: _i7.Future<_i3.GetAdaptersResponse>.value(
            _FakeGetAdaptersResponse_6(
          this,
          Invocation.method(
            #getAdapters,
            [],
          ),
        )),
      ) as _i7.FutureOr<_i3.GetAdaptersResponse>);

  @override
  _i7.FutureOr<_i3.GetAdaptersByLangResponse> getAdaptersByLang() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAdaptersByLang,
          [],
        ),
        returnValue: _i7.Future<_i3.GetAdaptersByLangResponse>.value(
            _FakeGetAdaptersByLangResponse_7(
          this,
          Invocation.method(
            #getAdaptersByLang,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.GetAdaptersByLangResponse>.value(
                _FakeGetAdaptersByLangResponse_7(
          this,
          Invocation.method(
            #getAdaptersByLang,
            [],
          ),
        )),
      ) as _i7.FutureOr<_i3.GetAdaptersByLangResponse>);

  @override
  _i7.FutureOr<_i3.AuthPollResponse> getAuthStatus() => (super.noSuchMethod(
        Invocation.method(
          #getAuthStatus,
          [],
        ),
        returnValue:
            _i7.Future<_i3.AuthPollResponse>.value(_FakeAuthPollResponse_8(
          this,
          Invocation.method(
            #getAuthStatus,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.AuthPollResponse>.value(_FakeAuthPollResponse_8(
          this,
          Invocation.method(
            #getAuthStatus,
            [],
          ),
        )),
      ) as _i7.FutureOr<_i3.AuthPollResponse>);

  @override
  _i7.FutureOr<_i3.StreamedContent> getPackageArchiveWithName() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPackageArchiveWithName,
          [],
        ),
        returnValue:
            _i7.Future<_i3.StreamedContent>.value(_FakeStreamedContent_4(
          this,
          Invocation.method(
            #getPackageArchiveWithName,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.StreamedContent>.value(_FakeStreamedContent_4(
          this,
          Invocation.method(
            #getPackageArchiveWithName,
            [],
          ),
        )),
      ) as _i7.FutureOr<_i3.StreamedContent>);

  @override
  _i7.FutureOr<_i3.GetPackageResponse> getPackageByName({
    required String? name,
    String? lang,
    bool? all,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPackageByName,
          [],
          {
            #name: name,
            #lang: lang,
            #all: all,
          },
        ),
        returnValue:
            _i7.Future<_i3.GetPackageResponse>.value(_FakeGetPackageResponse_9(
          this,
          Invocation.method(
            #getPackageByName,
            [],
            {
              #name: name,
              #lang: lang,
              #all: all,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.GetPackageResponse>.value(_FakeGetPackageResponse_9(
          this,
          Invocation.method(
            #getPackageByName,
            [],
            {
              #name: name,
              #lang: lang,
              #all: all,
            },
          ),
        )),
      ) as _i7.FutureOr<_i3.GetPackageResponse>);

  @override
  _i7.FutureOr<_i3.GetPackageResponse> getPackageByNameWithScope({
    required String? scope,
    required String? name,
    String? lang,
    bool? all,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPackageByNameWithScope,
          [],
          {
            #scope: scope,
            #name: name,
            #lang: lang,
            #all: all,
          },
        ),
        returnValue:
            _i7.Future<_i3.GetPackageResponse>.value(_FakeGetPackageResponse_9(
          this,
          Invocation.method(
            #getPackageByNameWithScope,
            [],
            {
              #scope: scope,
              #name: name,
              #lang: lang,
              #all: all,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.GetPackageResponse>.value(_FakeGetPackageResponse_9(
          this,
          Invocation.method(
            #getPackageByNameWithScope,
            [],
            {
              #scope: scope,
              #name: name,
              #lang: lang,
              #all: all,
            },
          ),
        )),
      ) as _i7.FutureOr<_i3.GetPackageResponse>);

  @override
  _i7.FutureOr<_i3.GetPackageByVersionResponse>
      getPackageByNameWithScopeAndVersion({
    required String? scope,
    required String? name,
    required String? version,
    String? lang,
    bool? all,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #getPackageByNameWithScopeAndVersion,
              [],
              {
                #scope: scope,
                #name: name,
                #version: version,
                #lang: lang,
                #all: all,
              },
            ),
            returnValue: _i7.Future<_i3.GetPackageByVersionResponse>.value(
                _FakeGetPackageByVersionResponse_10(
              this,
              Invocation.method(
                #getPackageByNameWithScopeAndVersion,
                [],
                {
                  #scope: scope,
                  #name: name,
                  #version: version,
                  #lang: lang,
                  #all: all,
                },
              ),
            )),
            returnValueForMissingStub:
                _i7.Future<_i3.GetPackageByVersionResponse>.value(
                    _FakeGetPackageByVersionResponse_10(
              this,
              Invocation.method(
                #getPackageByNameWithScopeAndVersion,
                [],
                {
                  #scope: scope,
                  #name: name,
                  #version: version,
                  #lang: lang,
                  #all: all,
                },
              ),
            )),
          ) as _i7.FutureOr<_i3.GetPackageByVersionResponse>);

  @override
  _i7.FutureOr<_i3.GetPackageByVersionResponse> getPackageByNameWithVersion({
    required String? name,
    String? lang,
    required String? version,
    bool? all,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPackageByNameWithVersion,
          [],
          {
            #name: name,
            #lang: lang,
            #version: version,
            #all: all,
          },
        ),
        returnValue: _i7.Future<_i3.GetPackageByVersionResponse>.value(
            _FakeGetPackageByVersionResponse_10(
          this,
          Invocation.method(
            #getPackageByNameWithVersion,
            [],
            {
              #name: name,
              #lang: lang,
              #version: version,
              #all: all,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.GetPackageByVersionResponse>.value(
                _FakeGetPackageByVersionResponse_10(
          this,
          Invocation.method(
            #getPackageByNameWithVersion,
            [],
            {
              #name: name,
              #lang: lang,
              #version: version,
              #all: all,
            },
          ),
        )),
      ) as _i7.FutureOr<_i3.GetPackageByVersionResponse>);

  @override
  _i7.FutureOr<_i3.GetPackagesResponse> getPackages({String? index}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPackages,
          [],
          {#index: index},
        ),
        returnValue: _i7.Future<_i3.GetPackagesResponse>.value(
            _FakeGetPackagesResponse_11(
          this,
          Invocation.method(
            #getPackages,
            [],
            {#index: index},
          ),
        )),
        returnValueForMissingStub: _i7.Future<_i3.GetPackagesResponse>.value(
            _FakeGetPackagesResponse_11(
          this,
          Invocation.method(
            #getPackages,
            [],
            {#index: index},
          ),
        )),
      ) as _i7.FutureOr<_i3.GetPackagesResponse>);

  @override
  _i7.FutureOr<_i3.GetUserResponse> getUserById({required String? id}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserById,
          [],
          {#id: id},
        ),
        returnValue:
            _i7.Future<_i3.GetUserResponse>.value(_FakeGetUserResponse_12(
          this,
          Invocation.method(
            #getUserById,
            [],
            {#id: id},
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.GetUserResponse>.value(_FakeGetUserResponse_12(
          this,
          Invocation.method(
            #getUserById,
            [],
            {#id: id},
          ),
        )),
      ) as _i7.FutureOr<_i3.GetUserResponse>);

  @override
  _i7.FutureOr<_i3.GetUsersResponse> getUsers() => (super.noSuchMethod(
        Invocation.method(
          #getUsers,
          [],
        ),
        returnValue:
            _i7.Future<_i3.GetUsersResponse>.value(_FakeGetUsersResponse_13(
          this,
          Invocation.method(
            #getUsers,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.GetUsersResponse>.value(_FakeGetUsersResponse_13(
          this,
          Invocation.method(
            #getUsers,
            [],
          ),
        )),
      ) as _i7.FutureOr<_i3.GetUsersResponse>);

  @override
  _i7.FutureOr<_i3.PublishPackageResponse> publishPackage(
    _i3.PublishPackageRequest? body, {
    required String? name,
    String? lang,
    bool? all,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #publishPackage,
          [body],
          {
            #name: name,
            #lang: lang,
            #all: all,
          },
        ),
        returnValue: _i7.Future<_i3.PublishPackageResponse>.value(
            _FakePublishPackageResponse_14(
          this,
          Invocation.method(
            #publishPackage,
            [body],
            {
              #name: name,
              #lang: lang,
              #all: all,
            },
          ),
        )),
        returnValueForMissingStub: _i7.Future<_i3.PublishPackageResponse>.value(
            _FakePublishPackageResponse_14(
          this,
          Invocation.method(
            #publishPackage,
            [body],
            {
              #name: name,
              #lang: lang,
              #all: all,
            },
          ),
        )),
      ) as _i7.FutureOr<_i3.PublishPackageResponse>);

  @override
  _i7.FutureOr<_i3.PublishPackageByVersionResponse> publishPackageVersion(
    _i3.PublishPackageByVersionRequest? body, {
    required String? name,
    String? lang,
    required String? version,
    bool? all,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #publishPackageVersion,
          [body],
          {
            #name: name,
            #lang: lang,
            #version: version,
            #all: all,
          },
        ),
        returnValue: _i7.Future<_i3.PublishPackageByVersionResponse>.value(
            _FakePublishPackageByVersionResponse_15(
          this,
          Invocation.method(
            #publishPackageVersion,
            [body],
            {
              #name: name,
              #lang: lang,
              #version: version,
              #all: all,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.PublishPackageByVersionResponse>.value(
                _FakePublishPackageByVersionResponse_15(
          this,
          Invocation.method(
            #publishPackageVersion,
            [body],
            {
              #name: name,
              #lang: lang,
              #version: version,
              #all: all,
            },
          ),
        )),
      ) as _i7.FutureOr<_i3.PublishPackageByVersionResponse>);

  @override
  _i7.FutureOr<_i3.PublishPackageResponse> publishPackageWithScope(
    _i3.PublishPackageRequest? body, {
    required String? scope,
    required String? name,
    String? lang,
    bool? all,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #publishPackageWithScope,
          [body],
          {
            #scope: scope,
            #name: name,
            #lang: lang,
            #all: all,
          },
        ),
        returnValue: _i7.Future<_i3.PublishPackageResponse>.value(
            _FakePublishPackageResponse_14(
          this,
          Invocation.method(
            #publishPackageWithScope,
            [body],
            {
              #scope: scope,
              #name: name,
              #lang: lang,
              #all: all,
            },
          ),
        )),
        returnValueForMissingStub: _i7.Future<_i3.PublishPackageResponse>.value(
            _FakePublishPackageResponse_14(
          this,
          Invocation.method(
            #publishPackageWithScope,
            [body],
            {
              #scope: scope,
              #name: name,
              #lang: lang,
              #all: all,
            },
          ),
        )),
      ) as _i7.FutureOr<_i3.PublishPackageResponse>);

  @override
  _i7.FutureOr<_i3.PublishPackageByVersionResponse>
      publishPackageWithScopeAndVersion(
    _i3.PublishPackageByVersionRequest? body, {
    required String? scope,
    required String? name,
    required String? version,
    String? lang,
    bool? all,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #publishPackageWithScopeAndVersion,
              [body],
              {
                #scope: scope,
                #name: name,
                #version: version,
                #lang: lang,
                #all: all,
              },
            ),
            returnValue: _i7.Future<_i3.PublishPackageByVersionResponse>.value(
                _FakePublishPackageByVersionResponse_15(
              this,
              Invocation.method(
                #publishPackageWithScopeAndVersion,
                [body],
                {
                  #scope: scope,
                  #name: name,
                  #version: version,
                  #lang: lang,
                  #all: all,
                },
              ),
            )),
            returnValueForMissingStub:
                _i7.Future<_i3.PublishPackageByVersionResponse>.value(
                    _FakePublishPackageByVersionResponse_15(
              this,
              Invocation.method(
                #publishPackageWithScopeAndVersion,
                [body],
                {
                  #scope: scope,
                  #name: name,
                  #version: version,
                  #lang: lang,
                  #all: all,
                },
              ),
            )),
          ) as _i7.FutureOr<_i3.PublishPackageByVersionResponse>);

  @override
  _i7.FutureOr<_i3.UploadAdapterResponse> uploadAdapterWithToken(
    _i3.StreamedContent? body, {
    String? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadAdapterWithToken,
          [body],
          {#id: id},
        ),
        returnValue: _i7.Future<_i3.UploadAdapterResponse>.value(
            _FakeUploadAdapterResponse_16(
          this,
          Invocation.method(
            #uploadAdapterWithToken,
            [body],
            {#id: id},
          ),
        )),
        returnValueForMissingStub: _i7.Future<_i3.UploadAdapterResponse>.value(
            _FakeUploadAdapterResponse_16(
          this,
          Invocation.method(
            #uploadAdapterWithToken,
            [body],
            {#id: id},
          ),
        )),
      ) as _i7.FutureOr<_i3.UploadAdapterResponse>);

  @override
  _i7.FutureOr<_i3.UploadPackageResponse> uploadPackageWithToken(
    _i3.StreamedContent? body, {
    String? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadPackageWithToken,
          [body],
          {#id: id},
        ),
        returnValue: _i7.Future<_i3.UploadPackageResponse>.value(
            _FakeUploadPackageResponse_17(
          this,
          Invocation.method(
            #uploadPackageWithToken,
            [body],
            {#id: id},
          ),
        )),
        returnValueForMissingStub: _i7.Future<_i3.UploadPackageResponse>.value(
            _FakeUploadPackageResponse_17(
          this,
          Invocation.method(
            #uploadPackageWithToken,
            [body],
            {#id: id},
          ),
        )),
      ) as _i7.FutureOr<_i3.UploadPackageResponse>);

  @override
  _i7.FutureOr<_i3.AuthPollResponse> validateAuthStatus({String? token}) =>
      (super.noSuchMethod(
        Invocation.method(
          #validateAuthStatus,
          [],
          {#token: token},
        ),
        returnValue:
            _i7.Future<_i3.AuthPollResponse>.value(_FakeAuthPollResponse_8(
          this,
          Invocation.method(
            #validateAuthStatus,
            [],
            {#token: token},
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.AuthPollResponse>.value(_FakeAuthPollResponse_8(
          this,
          Invocation.method(
            #validateAuthStatus,
            [],
            {#token: token},
          ),
        )),
      ) as _i7.FutureOr<_i3.AuthPollResponse>);

  @override
  _i7.FutureOr<_i3.YankAdapterResponse> yankAdapterWithId(
          {required String? id}) =>
      (super.noSuchMethod(
        Invocation.method(
          #yankAdapterWithId,
          [],
          {#id: id},
        ),
        returnValue: _i7.Future<_i3.YankAdapterResponse>.value(
            _FakeYankAdapterResponse_18(
          this,
          Invocation.method(
            #yankAdapterWithId,
            [],
            {#id: id},
          ),
        )),
        returnValueForMissingStub: _i7.Future<_i3.YankAdapterResponse>.value(
            _FakeYankAdapterResponse_18(
          this,
          Invocation.method(
            #yankAdapterWithId,
            [],
            {#id: id},
          ),
        )),
      ) as _i7.FutureOr<_i3.YankAdapterResponse>);

  @override
  _i7.FutureOr<_i3.YankPackageResponse> yankPackageByName(
    _i3.YankPackageRequest? body, {
    required String? name,
    String? lang,
    bool? all,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #yankPackageByName,
          [body],
          {
            #name: name,
            #lang: lang,
            #all: all,
          },
        ),
        returnValue: _i7.Future<_i3.YankPackageResponse>.value(
            _FakeYankPackageResponse_19(
          this,
          Invocation.method(
            #yankPackageByName,
            [body],
            {
              #name: name,
              #lang: lang,
              #all: all,
            },
          ),
        )),
        returnValueForMissingStub: _i7.Future<_i3.YankPackageResponse>.value(
            _FakeYankPackageResponse_19(
          this,
          Invocation.method(
            #yankPackageByName,
            [body],
            {
              #name: name,
              #lang: lang,
              #all: all,
            },
          ),
        )),
      ) as _i7.FutureOr<_i3.YankPackageResponse>);

  @override
  _i7.FutureOr<_i3.YankPackageResponse> yankPackageByNameWithScope(
    _i3.YankPackageRequest? body, {
    required String? scope,
    required String? name,
    String? lang,
    bool? all,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #yankPackageByNameWithScope,
          [body],
          {
            #scope: scope,
            #name: name,
            #lang: lang,
            #all: all,
          },
        ),
        returnValue: _i7.Future<_i3.YankPackageResponse>.value(
            _FakeYankPackageResponse_19(
          this,
          Invocation.method(
            #yankPackageByNameWithScope,
            [body],
            {
              #scope: scope,
              #name: name,
              #lang: lang,
              #all: all,
            },
          ),
        )),
        returnValueForMissingStub: _i7.Future<_i3.YankPackageResponse>.value(
            _FakeYankPackageResponse_19(
          this,
          Invocation.method(
            #yankPackageByNameWithScope,
            [body],
            {
              #scope: scope,
              #name: name,
              #lang: lang,
              #all: all,
            },
          ),
        )),
      ) as _i7.FutureOr<_i3.YankPackageResponse>);

  @override
  _i7.FutureOr<_i3.YankPackageByVersionRequest>
      yankPackageByNameWithScopeAndVersion(
    _i3.YankPackageByVersionResponse? body, {
    required String? scope,
    required String? name,
    required String? version,
    String? lang,
    bool? all,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #yankPackageByNameWithScopeAndVersion,
              [body],
              {
                #scope: scope,
                #name: name,
                #version: version,
                #lang: lang,
                #all: all,
              },
            ),
            returnValue: _i7.Future<_i3.YankPackageByVersionRequest>.value(
                _FakeYankPackageByVersionRequest_20(
              this,
              Invocation.method(
                #yankPackageByNameWithScopeAndVersion,
                [body],
                {
                  #scope: scope,
                  #name: name,
                  #version: version,
                  #lang: lang,
                  #all: all,
                },
              ),
            )),
            returnValueForMissingStub:
                _i7.Future<_i3.YankPackageByVersionRequest>.value(
                    _FakeYankPackageByVersionRequest_20(
              this,
              Invocation.method(
                #yankPackageByNameWithScopeAndVersion,
                [body],
                {
                  #scope: scope,
                  #name: name,
                  #version: version,
                  #lang: lang,
                  #all: all,
                },
              ),
            )),
          ) as _i7.FutureOr<_i3.YankPackageByVersionRequest>);

  @override
  _i7.FutureOr<_i3.YankPackageByVersionRequest> yankPackageVersionByName(
    _i3.YankPackageByVersionResponse? body, {
    required String? name,
    String? lang,
    required String? version,
    bool? all,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #yankPackageVersionByName,
          [body],
          {
            #name: name,
            #lang: lang,
            #version: version,
            #all: all,
          },
        ),
        returnValue: _i7.Future<_i3.YankPackageByVersionRequest>.value(
            _FakeYankPackageByVersionRequest_20(
          this,
          Invocation.method(
            #yankPackageVersionByName,
            [body],
            {
              #name: name,
              #lang: lang,
              #version: version,
              #all: all,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.YankPackageByVersionRequest>.value(
                _FakeYankPackageByVersionRequest_20(
          this,
          Invocation.method(
            #yankPackageVersionByName,
            [body],
            {
              #name: name,
              #lang: lang,
              #version: version,
              #all: all,
            },
          ),
        )),
      ) as _i7.FutureOr<_i3.YankPackageByVersionRequest>);

  @override
  void addHeaderEntry(
    String? key,
    String? value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #addHeaderEntry,
          [
            key,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<_i2.BaseResponse> request(
    String? path,
    _i8.Method? method,
    Map<String, String>? queryParams,
    String? hash,
    Object? body, {
    String? contentType,
    bool? streamResponse = false,
    Map<String, String>? headerParams,
    Map<String, String>? formParams,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [
            path,
            method,
            queryParams,
            hash,
            body,
          ],
          {
            #contentType: contentType,
            #streamResponse: streamResponse,
            #headerParams: headerParams,
            #formParams: formParams,
          },
        ),
        returnValue: _i7.Future<_i2.BaseResponse>.value(_FakeBaseResponse_21(
          this,
          Invocation.method(
            #request,
            [
              path,
              method,
              queryParams,
              hash,
              body,
            ],
            {
              #contentType: contentType,
              #streamResponse: streamResponse,
              #headerParams: headerParams,
              #formParams: formParams,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.BaseResponse>.value(_FakeBaseResponse_21(
          this,
          Invocation.method(
            #request,
            [
              path,
              method,
              queryParams,
              hash,
              body,
            ],
            {
              #contentType: contentType,
              #streamResponse: streamResponse,
              #headerParams: headerParams,
              #formParams: formParams,
            },
          ),
        )),
      ) as _i7.Future<_i2.BaseResponse>);
}
