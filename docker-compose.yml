name: pritt

services:
  # web:
  #   build: web-ref
  #   ports:
  #     - '3000:3000'
  #   environment:
  #     NUXT_PUBLIC_API_URL: ${API_URL}
  #     DATABASE_NAME: ${DATABASE_NAME}
  #     DATABASE_USERNAME: ${DATABASE_USERNAME}
  #     DATABASE_PASSWORD: ${DATABASE_PASSWORD}
  #     DATABASE_PORT: ${DATABASE_PORT}
  #     DATABASE_HOST: ${DATABASE_HOST}
  #   env_file:
  #     - .env

  runner:
    image: pritt-runner:latest
    expose:
      - 8000

  server:
    build:
      context: .
      dockerfile: server/Dockerfile
    ports:
      - '8080:8080'
    environment:
      PORT: 8080
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_HOST: ${DATABASE_HOST}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_URL: ${S3_URL}
      PRITT_RUNNER_URL: ${PRITT_RUNNER_URL}
    env_file:
      - .env
    depends_on:
      runner:
        condition: service_healthy
      db:
        condition: service_healthy
      filestorage:
        condition: service_healthy

  filestorage:
    image: quay.io/minio/minio
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      MINIO_ROOT_USER: ${MINIO_USERNAME}
      MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}
    env_file:
      - .env
    volumes:
      - fs-data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 5

  db:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - '${DATABASE_PORT}:5432'
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DATABASE_USERNAME}", "-d", "${DATABASE_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrate:
    image: flyway/flyway:latest
    command: -url=jdbc:postgresql://host.docker.internal:${DATABASE_PORT}/${DATABASE_NAME} -user=${DATABASE_USERNAME} -password=${DATABASE_PASSWORD} -locations=filesystem:/flyway/sql migrate
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - ./server/sql:/flyway/sql
    depends_on:
      db:
        condition: service_healthy
    restart: 'no'
    env_file:
      - .env

volumes:
  fs-data:
    name: 'pritt_fs_data'
