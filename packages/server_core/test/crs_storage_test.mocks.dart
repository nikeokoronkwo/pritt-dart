// Mocks generated by Mockito 5.4.6 from annotations
// in pritt_server_core/test/crs_storage_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:typed_data' as _i10;

import 'package:aws_s3_api/s3-2006-03-01.dart' as _i3;
import 'package:aws_signer_api/signer-2017-08-25.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;
import 'package:pritt_server_core/src/crs/interfaces.dart' as _i5;
import 'package:pritt_server_core/src/crs/response.dart' as _i7;
import 'package:pritt_server_core/src/storage.dart' as _i9;
import 'package:pritt_server_core/src/storage/interface.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePrittStorageInterface_0<T> extends _i1.SmartFake
    implements _i2.PrittStorageInterface<T> {
  _FakePrittStorageInterface_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeBucket_1 extends _i1.SmartFake implements _i3.Bucket {
  _FakeBucket_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSigner_2 extends _i1.SmartFake implements _i4.Signer {
  _FakeSigner_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeS3_3 extends _i1.SmartFake implements _i3.S3 {
  _FakeS3_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeCRSFileOutputStream_4 extends _i1.SmartFake
    implements _i2.CRSFileOutputStream {
  _FakeCRSFileOutputStream_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUri_5 extends _i1.SmartFake implements Uri {
  _FakeUri_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [CRSArchiveController].
///
/// See the documentation for Mockito's code generation for more information.
class MockCRSArchiveController extends _i1.Mock
    implements _i5.CRSArchiveController {
  MockCRSArchiveController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PrittStorageInterface<dynamic> get ofs =>
      (super.noSuchMethod(
            Invocation.getter(#ofs),
            returnValue: _FakePrittStorageInterface_0<dynamic>(
              this,
              Invocation.getter(#ofs),
            ),
          )
          as _i2.PrittStorageInterface<dynamic>);

  @override
  _i6.Future<_i7.CRSResponse<_i5.CRSArchive>> getArchiveWithVersion(
    String? packageName,
    String? version, {
    String? language,
    Map<String, dynamic>? env,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getArchiveWithVersion,
              [packageName, version],
              {#language: language, #env: env},
            ),
            returnValue: _i6.Future<_i7.CRSResponse<_i5.CRSArchive>>.value(
              _i8.dummyValue<_i7.CRSResponse<_i5.CRSArchive>>(
                this,
                Invocation.method(
                  #getArchiveWithVersion,
                  [packageName, version],
                  {#language: language, #env: env},
                ),
              ),
            ),
          )
          as _i6.Future<_i7.CRSResponse<_i5.CRSArchive>>);

  @override
  _i6.FutureOr<dynamic> setFileServer(
    String? packageName, {
    String? version,
    String? language,
    bool? cache = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #setFileServer,
              [packageName],
              {#version: version, #language: language, #cache: cache},
            ),
          )
          as _i6.FutureOr<dynamic>);
}

/// A class which mocks [PrittStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockPrittStorage extends _i1.Mock implements _i9.PrittStorage {
  MockPrittStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Bucket get pkgBucket =>
      (super.noSuchMethod(
            Invocation.getter(#pkgBucket),
            returnValue: _FakeBucket_1(this, Invocation.getter(#pkgBucket)),
          )
          as _i3.Bucket);

  @override
  _i3.Bucket get publishingBucket =>
      (super.noSuchMethod(
            Invocation.getter(#publishingBucket),
            returnValue: _FakeBucket_1(
              this,
              Invocation.getter(#publishingBucket),
            ),
          )
          as _i3.Bucket);

  @override
  _i3.Bucket get adapterBucket =>
      (super.noSuchMethod(
            Invocation.getter(#adapterBucket),
            returnValue: _FakeBucket_1(this, Invocation.getter(#adapterBucket)),
          )
          as _i3.Bucket);

  @override
  String get url =>
      (super.noSuchMethod(
            Invocation.getter(#url),
            returnValue: _i8.dummyValue<String>(this, Invocation.getter(#url)),
          )
          as String);

  @override
  _i4.Signer get signer =>
      (super.noSuchMethod(
            Invocation.getter(#signer),
            returnValue: _FakeSigner_2(this, Invocation.getter(#signer)),
          )
          as _i4.Signer);

  @override
  _i3.S3 get s3Instance =>
      (super.noSuchMethod(
            Invocation.getter(#s3Instance),
            returnValue: _FakeS3_3(this, Invocation.getter(#s3Instance)),
          )
          as _i3.S3);

  @override
  set pkgBucket(_i3.Bucket? _pkgBucket) => super.noSuchMethod(
    Invocation.setter(#pkgBucket, _pkgBucket),
    returnValueForMissingStub: null,
  );

  @override
  set publishingBucket(_i3.Bucket? _publishingBucket) => super.noSuchMethod(
    Invocation.setter(#publishingBucket, _publishingBucket),
    returnValueForMissingStub: null,
  );

  @override
  set adapterBucket(_i3.Bucket? _adapterBucket) => super.noSuchMethod(
    Invocation.setter(#adapterBucket, _adapterBucket),
    returnValueForMissingStub: null,
  );

  @override
  set url(String? _url) => super.noSuchMethod(
    Invocation.setter(#url, _url),
    returnValueForMissingStub: null,
  );

  @override
  set signer(_i4.Signer? _signer) => super.noSuchMethod(
    Invocation.setter(#signer, _signer),
    returnValueForMissingStub: null,
  );

  @override
  _i6.FutureOr<dynamic> copyPackage(String? from, String? to) =>
      (super.noSuchMethod(Invocation.method(#copyPackage, [from, to]))
          as _i6.FutureOr<dynamic>);

  @override
  _i6.Future<bool> createPackage(
    String? path,
    _i10.Uint8List? data,
    String? sha, {
    String? contentType,
    Map<String, String>? metadata,
    bool? private = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #createPackage,
              [path, data, sha],
              {
                #contentType: contentType,
                #metadata: metadata,
                #private: private,
              },
            ),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<_i2.CRSFile?> findPackage(String? path) =>
      (super.noSuchMethod(
            Invocation.method(#findPackage, [path]),
            returnValue: _i6.Future<_i2.CRSFile?>.value(),
          )
          as _i6.Future<_i2.CRSFile?>);

  @override
  _i6.Future<List<_i2.CRSFile>> listAllPackages() =>
      (super.noSuchMethod(
            Invocation.method(#listAllPackages, []),
            returnValue: _i6.Future<List<_i2.CRSFile>>.value(<_i2.CRSFile>[]),
          )
          as _i6.Future<List<_i2.CRSFile>>);

  @override
  _i6.Future<List<_i2.CRSFile>> listPackagesWhere(
    bool Function(String)? where,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#listPackagesWhere, [where]),
            returnValue: _i6.Future<List<_i2.CRSFile>>.value(<_i2.CRSFile>[]),
          )
          as _i6.Future<List<_i2.CRSFile>>);

  @override
  _i6.FutureOr<dynamic> removePackage(String? path) =>
      (super.noSuchMethod(Invocation.method(#removePackage, [path]))
          as _i6.FutureOr<dynamic>);

  @override
  _i6.FutureOr<dynamic> updatePackage(String? path, _i10.Uint8List? data) =>
      (super.noSuchMethod(Invocation.method(#updatePackage, [path, data]))
          as _i6.FutureOr<dynamic>);

  @override
  _i6.Future<_i2.CRSFileOutputStream> getPackage(String? path) =>
      (super.noSuchMethod(
            Invocation.method(#getPackage, [path]),
            returnValue: _i6.Future<_i2.CRSFileOutputStream>.value(
              _FakeCRSFileOutputStream_4(
                this,
                Invocation.method(#getPackage, [path]),
              ),
            ),
          )
          as _i6.Future<_i2.CRSFileOutputStream>);

  @override
  _i6.FutureOr<bool> createPubArchive(
    String? path,
    _i10.Uint8List? data, {
    String? contentType,
    Map<String, String>? metadata,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #createPubArchive,
              [path, data],
              {#contentType: contentType, #metadata: metadata},
            ),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.FutureOr<bool>);

  @override
  _i6.FutureOr<_i2.CRSFileOutputStream> getPubArchive(String? path) =>
      (super.noSuchMethod(
            Invocation.method(#getPubArchive, [path]),
            returnValue: _i6.Future<_i2.CRSFileOutputStream>.value(
              _FakeCRSFileOutputStream_4(
                this,
                Invocation.method(#getPubArchive, [path]),
              ),
            ),
          )
          as _i6.FutureOr<_i2.CRSFileOutputStream>);

  @override
  _i6.FutureOr<dynamic> movePubArchiveToPackage(String? from, String? to) =>
      (super.noSuchMethod(
            Invocation.method(#movePubArchiveToPackage, [from, to]),
          )
          as _i6.FutureOr<dynamic>);

  @override
  _i6.FutureOr<bool> pubArchiveExists(String? path) =>
      (super.noSuchMethod(
            Invocation.method(#pubArchiveExists, [path]),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.FutureOr<bool>);

  @override
  _i6.FutureOr<dynamic> removePubArchive(String? path) =>
      (super.noSuchMethod(Invocation.method(#removePubArchive, [path]))
          as _i6.FutureOr<dynamic>);

  @override
  _i6.FutureOr<Uri> createPubEndpointUrl(
    String? path, {
    required String? pubId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createPubEndpointUrl, [path], {#pubId: pubId}),
            returnValue: _i6.Future<Uri>.value(
              _FakeUri_5(
                this,
                Invocation.method(
                  #createPubEndpointUrl,
                  [path],
                  {#pubId: pubId},
                ),
              ),
            ),
          )
          as _i6.FutureOr<Uri>);
}
