{
  "name": "@pritt/workspace",
  "private": true,
  "description": "",
  "type": "module",
  "scripts": {
    "cli": "dart cli/bin/pritt.dart",
    "e2e:setup": "cp .env e2e && cp -r server/sql e2e/assets",
    "e2e": "cd e2e && pnpm test",
    "schema:generate": "pkl eval config/main.pkl --project-dir config -f yaml -o config/out/openapi.yaml && pkl eval config/main.pkl --project-dir config -f json -o config/out/openapi.json",
    "schema:web": "mkdir -p web/schema && cp -r config/out/openapi.yaml web/schema/openapi.yaml; cd web; pnpm schema",
    "schema": "pnpm schema:generate",
    "format:dart": "dart format .",
    "format:js": "prettier . --write",
    "format": "pnpm format:dart && pnpm format:js; cd web; pnpm format; cd -",
    "dev:server": "./tool/denv.dart --cwd server -- dart run bin/server.dart",
    "dev:web": "cd web-ref && pnpm dev",
    "build:server": "./tool/denv.dart --cwd server -- dart compile exe bin/server.dart",
    "gen:common": "pnpm schema:generate && ./scripts/openapigen ./config/out/openapi.yaml -o ./common",
    "gen:web": "./scripts/webgen",
    "tool:migrate:server": "./tool/denv.dart --cwd server -- dart tool/migrate.dart",

    "tf:init": "cd infra && tofu init",
    "tf:plan": "cd infra && tofu plan -var-file=infra.tfvars -out=infra.tfplan",
    "tf:apply": "cd infra && tofu apply -input=false infra.tfplan"
  },
  "pnpm": {
    "onlyBuiltDependencies": [
      "@parcel/watcher",
      "@tailwindcss/oxide",
      "better-sqlite3",
      "esbuild"
    ],
    "ignoredBuiltDependencies": [
      "@prisma/client",
      "@prisma/engines",
      "cpu-features",
      "prisma",
      "protobufjs",
      "sharp",
      "ssh2",
      "unrs-resolver",
      "vue-demi"
    ]
  },
  "devDependencies": {
    "prettier": "3.5.3",
    "tsx": "^4.19.4"
  }
}
